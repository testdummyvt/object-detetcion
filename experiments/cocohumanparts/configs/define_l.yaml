task: DETECTION
model:
  class_path: otx.backend.native.models.detection.d_fine.DFine
  init_args:
    model_name: dfine_hgnetv2_l
    label_info: 5
    multi_scale: true

    optimizer:
      class_path: torch.optim.AdamW
      init_args:
        lr: 0.00025
        betas: [0.9, 0.999]
        weight_decay: 0.000125

    scheduler:
      class_path: otx.backend.native.schedulers.LinearWarmupSchedulerCallable
      init_args:
        num_warmup_steps: 100
        main_scheduler_callable:
          class_path: lightning.pytorch.cli.ReduceLROnPlateau
          init_args:
            mode: max
            factor: 0.1
            patience: 6
            monitor: val/map_50
engine:
  device: auto

callback_monitor: val/map_50

data: ../_base_/data/torchvision_base.yaml

callbacks:
  - class_path: otx.backend.native.callbacks.adaptive_train_scheduling.AdaptiveTrainScheduling
    init_args:
      max_interval: 1
      min_lrschedule_patience: 3
  - class_path: otx.backend.native.callbacks.adaptive_early_stopping.EarlyStoppingWithWarmup
    init_args:
      warmup_iters: 100
      warmup_epochs: 7
  - class_path: lightning.pytorch.callbacks.ModelCheckpoint
    init_args:
      dirpath: "" # use engine.work_dir
      monitor: val/map_50
      mode: max
      save_top_k: 1
      save_last: true
      auto_insert_metric_name: false
      filename: "checkpoints/epoch_{epoch:03d}"

overrides:
  data:
    input_size:
      - 640
      - 640
    task: DETECTION
    data_format: coco_instances
    train_subset:
      batch_size: 8
      num_workers: 4
      transforms:
        - class_path: torchvision.transforms.v2.RandomPhotometricDistort
          init_args:
            p: 0.5
        - class_path: torchvision.transforms.v2.RandomZoomOut
          init_args:
            fill: 0
        - class_path: otx.data.transform_libs.torchvision.RandomIoUCrop
          init_args:
            p: 0.8
        - class_path: torchvision.transforms.v2.SanitizeBoundingBoxes
          init_args:
            min_size: 1
        - class_path: otx.data.transform_libs.torchvision.RandomFlip
          init_args:
            prob: 0.5
        - class_path: otx.data.transform_libs.torchvision.Resize
          init_args:
            scale: $(input_size)
            transform_bbox: true
            keep_ratio: false
            is_numpy_to_tvtensor: true
        - class_path: otx.data.transform_libs.torchvision.PhotoMetricDistortion
          enable: false
          init_args:
            is_numpy_to_tvtensor: true
        - class_path: otx.data.transform_libs.torchvision.RandomAffine
          enable: false
          init_args:
            is_numpy_to_tvtensor: true
        - class_path: torchvision.transforms.v2.GaussianBlur
          enable: false
          init_args:
            kernel_size: 5
        - class_path: torchvision.transforms.v2.RandomVerticalFlip
          enable: false
        - class_path: torchvision.transforms.v2.ToDtype
          init_args:
            dtype: ${as_torch_dtype:torch.float32}
            scale: false
        - class_path: torchvision.transforms.v2.Normalize
          init_args:
            mean: [0.0, 0.0, 0.0]
            std: [255.0, 255.0, 255.0]
        - class_path: torchvision.transforms.v2.GaussianNoise
          enable: false
        - class_path: torchvision.transforms.v2.SanitizeBoundingBoxes
          init_args:
            min_size: 1
      sampler:
        class_path: otx.data.samplers.balanced_sampler.BalancedSampler

    val_subset:
      batch_size: 8
      transforms:
        - class_path: otx.data.transform_libs.torchvision.Resize
          init_args:
            scale: $(input_size)
            keep_ratio: false
            is_numpy_to_tvtensor: true
        - class_path: torchvision.transforms.v2.ToDtype
          init_args:
            dtype: ${as_torch_dtype:torch.float32}
            scale: false
        - class_path: torchvision.transforms.v2.Normalize
          init_args:
            mean: [0.0, 0.0, 0.0]
            std: [255.0, 255.0, 255.0]

    test_subset:
      batch_size: 8
      transforms:
        - class_path: otx.data.transform_libs.torchvision.Resize
          init_args:
            scale: $(input_size)
            keep_ratio: false
            is_numpy_to_tvtensor: true
        - class_path: torchvision.transforms.v2.ToDtype
          init_args:
            dtype: ${as_torch_dtype:torch.float32}
            scale: false
        - class_path: torchvision.transforms.v2.Normalize
          init_args:
            mean: [0.0, 0.0, 0.0]
            std: [255.0, 255.0, 255.0]